# -*- coding: utf-8 -*-
"""IoT Integration.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-HyTEKMY5bkRrn8ZHv7Fq5MGdrEE2DJJ
"""

pip install paho-mqtt influxdb-client

import paho.mqtt.client as mqtt
from influxdb_client import InfluxDBClient, Point, WriteOptions

# InfluxDB configuration
INFLUX_TOKEN = "your_token"
INFLUX_URL = "http://localhost:8086"
INFLUX_ORG = "your_org"
INFLUX_BUCKET = "pathfinder"

client = InfluxDBClient(url=INFLUX_URL, token=INFLUX_TOKEN, org=INFLUX_ORG)
write_api = client.write_api(write_options=WriteOptions(batch_size=500))

# MQTT callback
def on_message(client, userdata, message):
    payload = message.payload.decode('utf-8')
    print(f"Received `{payload}` from `{message.topic}` topic")

    # Parse data and write to InfluxDB
    point = Point("machine_data").tag("machine", "machine1").field("OEE", float(payload))
    write_api.write(INFLUX_BUCKET, INFLUX_ORG, point)

# MQTT connection setup
mqtt_client = mqtt.Client("PathFinderSubscriber")
mqtt_client.on_message = on_message
mqtt_client.connect("mqtt.eclipseprojects.io", 1883)
mqtt_client.subscribe("factory/machine1/oee")

mqtt_client.loop_forever()

"""OEE Calculation"""

def calculate_oee(availability, performance, quality):
    return (availability * performance * quality) * 100

from fastapi import APIRouter, Depends
from sqlalchemy.orm import Session
from ..oee_calculator import calculate_oee

router = APIRouter()

@router.post("/calculate-oee/")
def get_oee(availability: float, performance: float, quality: float):
    oee = calculate_oee(availability, performance, quality)
    return {"OEE": oee}

