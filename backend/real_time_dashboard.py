# -*- coding: utf-8 -*-
"""Real-Time Dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EL4I8kjod8ZMFnsqLS2l4kt8OX_asj2I
"""

from fastapi import FastAPI, WebSocket
import asyncio

app = FastAPI()

@app.websocket("/ws/oee")
async def oee_websocket(websocket: WebSocket):
    await websocket.accept()
    while True:
        # Dummy OEE data (replace with real-time query from database)
        oee_data = {"oee": 85.0, "timestamp": "2024-11-28T12:00:00"}
        await websocket.send_json(oee_data)
        await asyncio.sleep(5)  # Send updates every 5 seconds

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Real-Time OEE Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <h1>OEE Dashboard</h1>
    <canvas id="oeeChart" width="400" height="200"></canvas>

    <script>
        const ctx = document.getElementById('oeeChart').getContext('2d');
        const oeeChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'OEE (%)',
                    data: [],
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1,
                    fill: false
                }]
            },
            options: {
                scales: {
                    x: {
                        type: 'time',
                        time: { unit: 'minute' }
                    },
                    y: { beginAtZero: true }
                }
            }
        });

        const socket = new WebSocket('ws://localhost:8000/ws/oee');
        socket.onmessage = (event) => {
            const data = JSON.parse(event.data);
            oeeChart.data.labels.push(new Date(data.timestamp));
            oeeChart.data.datasets[0].data.push(data.oee);
            oeeChart.update();
        };
    </script>
</body>
</html>

@router.post("/optimize-oee/")
def optimize_oee(data: dict):
    # Example: AI model logic (placeholder)
    suggestions = {
        "availability": "Schedule maintenance for Machine 1",
        "performance": "Increase conveyor speed by 5%",
        "quality": "Check calibration of sensors"
    }
    return {"suggestions": suggestions}